---


- name: Install Routes
  tags: build
  when: omgeving != "build"
  k8s:
    host: "{{ oc_props.host }}"
    api_key: "{{ oc_props.token }}"
    validate_certs: "{{ oc_props.validate_certs }}"
    state: present
    definition:
      apiVersion: v1
      kind: Route
      metadata:
        name: toepen
        namespace: "reboot-{{ omgeving }}"
        annotations:
          git_ref: "{{ git_info.after }}"
        labels:
          app: toepen
      spec:
        host: "toepen-{{ omgeving }}.web.liander.nl"
        port:
          targetPort: "8443-tcp"
        tls:
          termination: "passthrough"
        to:
          kind: Service
          name: "web-reboot-service-proxy"
          weight: 100
        wildcardPolicy: None

- name: Install service
  tags: build
  when: omgeving != "build"
  k8s:
    host: "{{ oc_props.host }}"
    api_key: "{{ oc_props.token }}"
    validate_certs: "{{ oc_props.validate_certs }}"
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: toepen
        namespace: "reboot-{{ omgeving }}"
        annotations:
          git_ref: "{{ git_info.after }}"
        labels:
          app: "toepen"
      spec:
        ports:
        - name: 7000-tcp
          protocol: TCP
          port: 7000
          targetPort: 7000
        selector:
          deploymentconfig: "toepen"
        sessionAffinity: None
        type: ClusterIP

- name: Install de DeploymentConfig
  tags: build
  when: omgeving != "build"
  k8s:
    host: "{{ oc_props.host }}"
    api_key: "{{ oc_props.token }}"
    validate_certs: "{{ oc_props.validate_certs }}"
    state: present
    definition:
      apiVersion: v1
      kind: DeploymentConfig
      metadata:
        name: toepen
        namespace: "reboot-{{ omgeving }}"
        annotations:
          git_ref: "{{ git_info.after }}"
        labels:
          app: toepen
      spec:
        replicas: "{{ application.instances }}"
        selector:
          deploymentconfig: toepen
        strategy:
          activeDeadlineSeconds: 21600
          resources: {}
          rollingParams:
            intervalSeconds: 1
            maxSurge: 25%
            maxUnavailable: 25%
            timeoutSeconds: 600
            updatePeriodSeconds: 1
          type: Rolling
        template:
          metadata:
            labels:
              app: toepen
              actorSystemName: toepen
              deploymentconfig: toepen
          spec:
            containers:
            - env:
              image: "reboot-build/toepen:{{ omgeving }}"
              imagePullPolicy: IfNotPresent
              name: toepen
              ports:
              - containerPort: 7000
                protocol: TCP
              resources: "{{ application.resources}}"
            dnsPolicy: ClusterFirst
            restartPolicy: Always
            schedulerName: default-scheduler
            securityContext: {}
            terminationGracePeriodSeconds: 30
        test: false
        triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
            - toepen
            from:
              kind: ImageStreamTag
              name: "toepen:{{ omgeving }}"
              namespace: reboot-build
        - type: ConfigChange


