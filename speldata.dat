{"alleSpelers":[{"id":"27331","naam":"Robbert","kaarten":[{"symbool":"RUITEN","waarde":11},{"symbool":"RUITEN","waarde":9},{"symbool":"RUITEN","waarde":13}],"gespeeldeKaart":null,"totaalLucifers":2,"ingezetteLucifers":1,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":true,"isMonkey":true,"score":99,"scoreDezeRonde":0},{"id":"80785","naam":"Bol","kaarten":[{"symbool":"RUITEN","waarde":13},{"symbool":"HARTEN","waarde":12},{"symbool":"SCHOPPEN","waarde":11},{"symbool":"SCHOPPEN","waarde":10}],"gespeeldeKaart":null,"totaalLucifers":10,"ingezetteLucifers":1,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":false,"isMonkey":false,"score":11,"scoreDezeRonde":0},{"id":"35113","naam":"Bob","kaarten":[{"symbool":"SCHOPPEN","waarde":12},{"symbool":"KLAVER","waarde":8},{"symbool":"KLAVER","waarde":11}],"gespeeldeKaart":null,"totaalLucifers":5,"ingezetteLucifers":1,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":true,"isMonkey":true,"score":129,"scoreDezeRonde":0},{"id":"21682","naam":"Dimi","kaarten":[{"symbool":"RUITEN","waarde":10},{"symbool":"HARTEN","waarde":14}],"gespeeldeKaart":null,"totaalLucifers":4,"ingezetteLucifers":2,"gepast":false,"toepKeuze":"MEE","actiefInSpel":true,"wilMeedoen":false,"isMonkey":false,"score":0,"scoreDezeRonde":0},{"id":"18158","naam":"Ferry","kaarten":[],"gespeeldeKaart":null,"totaalLucifers":0,"ingezetteLucifers":0,"gepast":false,"toepKeuze":"MEE","actiefInSpel":false,"wilMeedoen":false,"isMonkey":true,"score":9,"scoreDezeRonde":0},{"id":"23912","naam":"JeroenA","kaarten":[],"gespeeldeKaart":{"symbool":"HARTEN","waarde":7},"totaalLucifers":0,"ingezetteLucifers":0,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":false,"wilMeedoen":false,"isMonkey":true,"score":13,"scoreDezeRonde":3},{"id":"58137","naam":"Goof","kaarten":[{"symbool":"HARTEN","waarde":14},{"symbool":"RUITEN","waarde":10},{"symbool":"KLAVER","waarde":11},{"symbool":"HARTEN","waarde":12}],"gespeeldeKaart":null,"totaalLucifers":10,"ingezetteLucifers":1,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":false,"isMonkey":false,"score":25,"scoreDezeRonde":0},{"id":"71976","naam":"JGwoud","kaarten":[{"symbool":"SCHOPPEN","waarde":14},{"symbool":"KLAVER","waarde":14},{"symbool":"RUITEN","waarde":14},{"symbool":"RUITEN","waarde":13}],"gespeeldeKaart":null,"totaalLucifers":10,"ingezetteLucifers":1,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":false,"isMonkey":false,"score":18,"scoreDezeRonde":0},{"id":"50601","naam":"Berg","kaarten":[],"gespeeldeKaart":null,"totaalLucifers":0,"ingezetteLucifers":0,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":false,"wilMeedoen":false,"isMonkey":false,"score":2,"scoreDezeRonde":2},{"id":"92718","naam":"Joost","kaarten":[{"symbool":"RUITEN","waarde":8},{"symbool":"KLAVER","waarde":7},{"symbool":"SCHOPPEN","waarde":13},{"symbool":"SCHOPPEN","waarde":12}],"gespeeldeKaart":null,"totaalLucifers":10,"ingezetteLucifers":1,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":false,"isMonkey":false,"score":22,"scoreDezeRonde":0},{"id":"87079","naam":"Schaap","kaarten":[{"symbool":"RUITEN","waarde":13},{"symbool":"SCHOPPEN","waarde":9},{"symbool":"KLAVER","waarde":7},{"symbool":"RUITEN","waarde":12}],"gespeeldeKaart":null,"totaalLucifers":10,"ingezetteLucifers":1,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":false,"isMonkey":false,"score":12,"scoreDezeRonde":0},{"id":"85365","naam":"Marco","kaarten":[{"symbool":"KLAVER","waarde":8},{"symbool":"SCHOPPEN","waarde":7},{"symbool":"HARTEN","waarde":11},{"symbool":"HARTEN","waarde":8}],"gespeeldeKaart":null,"totaalLucifers":10,"ingezetteLucifers":1,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":false,"isMonkey":false,"score":7,"scoreDezeRonde":0},{"id":"12505","naam":"Martin","kaarten":[],"gespeeldeKaart":{"symbool":"KLAVER","waarde":14},"totaalLucifers":1,"ingezetteLucifers":0,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":false,"isMonkey":false,"score":15,"scoreDezeRonde":5},{"id":"97570","naam":"Mike","kaarten":[],"gespeeldeKaart":null,"totaalLucifers":0,"ingezetteLucifers":0,"gepast":false,"toepKeuze":"MEE","actiefInSpel":false,"wilMeedoen":false,"isMonkey":true,"score":0,"scoreDezeRonde":2},{"id":"72780","naam":"Niels","kaarten":[],"gespeeldeKaart":null,"totaalLucifers":0,"ingezetteLucifers":0,"gepast":false,"toepKeuze":"MEE","actiefInSpel":false,"wilMeedoen":false,"isMonkey":true,"score":0,"scoreDezeRonde":2},{"id":"14174","naam":"Peter","kaarten":[{"symbool":"KLAVER","waarde":13},{"symbool":"SCHOPPEN","waarde":9},{"symbool":"RUITEN","waarde":11},{"symbool":"SCHOPPEN","waarde":12}],"gespeeldeKaart":null,"totaalLucifers":10,"ingezetteLucifers":1,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":false,"isMonkey":true,"score":0,"scoreDezeRonde":0},{"id":"78867","naam":"Erik","kaarten":[],"gespeeldeKaart":{"symbool":"SCHOPPEN","waarde":12},"totaalLucifers":0,"ingezetteLucifers":0,"gepast":false,"toepKeuze":"MEE","actiefInSpel":false,"wilMeedoen":false,"isMonkey":true,"score":0,"scoreDezeRonde":3},{"id":"38800","naam":"","kaarten":[],"gespeeldeKaart":{"symbool":"SCHOPPEN","waarde":11},"totaalLucifers":2,"ingezetteLucifers":0,"gepast":false,"toepKeuze":"TOEP","actiefInSpel":true,"wilMeedoen":false,"isMonkey":true,"score":0,"scoreDezeRonde":5},{"id":"25664","naam":"","kaarten":[],"gespeeldeKaart":{"symbool":"RUITEN","waarde":12},"totaalLucifers":3,"ingezetteLucifers":0,"gepast":false,"toepKeuze":"TOEP","actiefInSpel":true,"wilMeedoen":false,"isMonkey":true,"score":0,"scoreDezeRonde":5},{"id":"39340","naam":"","kaarten":[],"gespeeldeKaart":{"symbool":"RUITEN","waarde":13},"totaalLucifers":4,"ingezetteLucifers":0,"gepast":false,"toepKeuze":"TOEP","actiefInSpel":true,"wilMeedoen":false,"isMonkey":true,"score":0,"scoreDezeRonde":5},{"id":"42942","naam":"","kaarten":[],"gespeeldeKaart":null,"totaalLucifers":0,"ingezetteLucifers":0,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":false,"isMonkey":false,"score":0,"scoreDezeRonde":0},{"id":"10681","naam":"","kaarten":[],"gespeeldeKaart":null,"totaalLucifers":0,"ingezetteLucifers":0,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":false,"isMonkey":false,"score":0,"scoreDezeRonde":0},{"id":"99388","naam":"","kaarten":[],"gespeeldeKaart":null,"totaalLucifers":0,"ingezetteLucifers":0,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":false,"isMonkey":false,"score":0,"scoreDezeRonde":0},{"id":"51308","naam":"","kaarten":[],"gespeeldeKaart":null,"totaalLucifers":0,"ingezetteLucifers":0,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":false,"isMonkey":false,"score":0,"scoreDezeRonde":0},{"id":"17330","naam":"","kaarten":[],"gespeeldeKaart":null,"totaalLucifers":0,"ingezetteLucifers":0,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":false,"isMonkey":false,"score":0,"scoreDezeRonde":0},{"id":"51102","naam":"","kaarten":[],"gespeeldeKaart":null,"totaalLucifers":0,"ingezetteLucifers":0,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":false,"isMonkey":false,"score":0,"scoreDezeRonde":0},{"id":"81873","naam":"","kaarten":[],"gespeeldeKaart":null,"totaalLucifers":0,"ingezetteLucifers":0,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":false,"isMonkey":false,"score":0,"scoreDezeRonde":0},{"id":"47808","naam":"","kaarten":[],"gespeeldeKaart":null,"totaalLucifers":0,"ingezetteLucifers":0,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":false,"isMonkey":false,"score":0,"scoreDezeRonde":0},{"id":"70513","naam":"","kaarten":[],"gespeeldeKaart":null,"totaalLucifers":0,"ingezetteLucifers":0,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":false,"isMonkey":false,"score":0,"scoreDezeRonde":0},{"id":"36214","naam":"","kaarten":[],"gespeeldeKaart":null,"totaalLucifers":0,"ingezetteLucifers":0,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":false,"isMonkey":false,"score":0,"scoreDezeRonde":0},{"id":"78598","naam":"","kaarten":[],"gespeeldeKaart":null,"totaalLucifers":0,"ingezetteLucifers":0,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":false,"isMonkey":false,"score":0,"scoreDezeRonde":0},{"id":"42351","naam":"","kaarten":[],"gespeeldeKaart":null,"totaalLucifers":0,"ingezetteLucifers":0,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":false,"isMonkey":false,"score":0,"scoreDezeRonde":0},{"id":"20265","naam":"","kaarten":[],"gespeeldeKaart":null,"totaalLucifers":0,"ingezetteLucifers":0,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":false,"isMonkey":false,"score":0,"scoreDezeRonde":0},{"id":"51997","naam":"","kaarten":[],"gespeeldeKaart":null,"totaalLucifers":0,"ingezetteLucifers":0,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":false,"isMonkey":false,"score":0,"scoreDezeRonde":0},{"id":"39484","naam":"","kaarten":[],"gespeeldeKaart":null,"totaalLucifers":0,"ingezetteLucifers":0,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":false,"isMonkey":false,"score":0,"scoreDezeRonde":0},{"id":"86999","naam":"","kaarten":[],"gespeeldeKaart":null,"totaalLucifers":0,"ingezetteLucifers":0,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":false,"isMonkey":false,"score":0,"scoreDezeRonde":0},{"id":"59852","naam":"","kaarten":[],"gespeeldeKaart":null,"totaalLucifers":0,"ingezetteLucifers":0,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":false,"isMonkey":false,"score":0,"scoreDezeRonde":0},{"id":"26698","naam":"","kaarten":[],"gespeeldeKaart":null,"totaalLucifers":0,"ingezetteLucifers":0,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":false,"isMonkey":false,"score":0,"scoreDezeRonde":0},{"id":"16650","naam":"","kaarten":[],"gespeeldeKaart":null,"totaalLucifers":0,"ingezetteLucifers":0,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":false,"isMonkey":false,"score":0,"scoreDezeRonde":0},{"id":"40735","naam":"","kaarten":[],"gespeeldeKaart":null,"totaalLucifers":0,"ingezetteLucifers":0,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":false,"isMonkey":false,"score":0,"scoreDezeRonde":0}],"tafels":[{"tafelNr":1,"log":["val speler27331 = maakSpeler(\"speler.naam\", \"1\")","val speler1 =  speler27331","var speler27331kaarten: MutableList<Kaart> = emptyList<Kaart>().toMutableList()","speler27331kaarten.add(Kaart(SCHOPPEN, 12))","speler27331kaarten.add(Kaart(SCHOPPEN, 9))","speler27331kaarten.add(Kaart(HARTEN, 11))","speler27331kaarten.add(Kaart(HARTEN, 8))","SpelerService.nieuwSpel(speler1, 5)","SpelerService.nieuweRonde(speler1, speler27331kaarten)","val speler35113 = maakSpeler(\"speler.naam\", \"2\")","val speler2 =  speler35113","var speler35113kaarten: MutableList<Kaart> = emptyList<Kaart>().toMutableList()","speler35113kaarten.add(Kaart(KLAVER, 7))","speler35113kaarten.add(Kaart(KLAVER, 9))","speler35113kaarten.add(Kaart(KLAVER, 11))","speler35113kaarten.add(Kaart(SCHOPPEN, 11))","SpelerService.nieuwSpel(speler2, 5)","SpelerService.nieuweRonde(speler2, speler35113kaarten)","val tafel = Tafel(1)","tafel.spelers = listOf(speler1, speler2, speler3, speler4).toMutableList()","tafel.opkomer = speler1","tafel.huidigeSpeler = speler1","tafel.inzet = 1","SpelContext.spelData.tafels = listOf(tafel).toMutableList()","assertThat(SpelerService.speelKaart(speler27331, Kaart(HARTEN,8))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(KLAVER,11))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler27331)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(HARTEN,11))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(KLAVER,9))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler27331)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(SCHOPPEN,9))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(SCHOPPEN,11))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler35113)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(KLAVER,7))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(SCHOPPEN,12))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","speler27331.clear()","speler27331.kaarten.add(Kaart(SCHOPPEN, 9))","speler27331.kaarten.add(Kaart(HARTEN, 14))","speler27331.kaarten.add(Kaart(KLAVER, 9))","speler27331.kaarten.add(Kaart(KLAVER, 7))","speler35113.clear()","speler35113.kaarten.add(Kaart(RUITEN, 8))","speler35113.kaarten.add(Kaart(KLAVER, 14))","speler35113.kaarten.add(Kaart(RUITEN, 14))","speler35113.kaarten.add(Kaart(RUITEN, 13))","assertThat(SpelerService.pakSlag(speler35113)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(KLAVER,7))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(KLAVER,14))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler35113)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(RUITEN,8))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(KLAVER,9))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler35113)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(RUITEN,14))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.toep(speler27331)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","speler27331.clear()","speler27331.kaarten.add(Kaart(RUITEN, 11))","speler27331.kaarten.add(Kaart(SCHOPPEN, 12))","speler27331.kaarten.add(Kaart(SCHOPPEN, 8))","speler27331.kaarten.add(Kaart(HARTEN, 8))","speler35113.clear()","speler35113.kaarten.add(Kaart(RUITEN, 7))","speler35113.kaarten.add(Kaart(KLAVER, 13))","speler35113.kaarten.add(Kaart(HARTEN, 10))","speler35113.kaarten.add(Kaart(HARTEN, 11))","assertThat(SpelerService.pas(speler35113)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(HARTEN,11))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(HARTEN,8))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler35113)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(RUITEN,7))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(RUITEN,11))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler27331)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(SCHOPPEN,8))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(KLAVER,13))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler27331)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(SCHOPPEN,12))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(HARTEN,10))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","speler27331.clear()","speler27331.kaarten.add(Kaart(RUITEN, 8))","speler27331.kaarten.add(Kaart(HARTEN, 10))","speler27331.kaarten.add(Kaart(RUITEN, 9))","speler27331.kaarten.add(Kaart(KLAVER, 9))","speler35113.clear()","speler35113.kaarten.add(Kaart(RUITEN, 13))","speler35113.kaarten.add(Kaart(RUITEN, 10))","speler35113.kaarten.add(Kaart(KLAVER, 14))","speler35113.kaarten.add(Kaart(SCHOPPEN, 10))","assertThat(SpelerService.pakSlag(speler27331)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(KLAVER,14))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(KLAVER,9))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler35113)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(RUITEN,13))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(RUITEN,9))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler35113)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(RUITEN,10))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(RUITEN,8))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler35113)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(SCHOPPEN,10))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(HARTEN,10))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","speler27331.clear()","speler27331.kaarten.add(Kaart(SCHOPPEN, 14))","speler27331.kaarten.add(Kaart(RUITEN, 12))","speler27331.kaarten.add(Kaart(SCHOPPEN, 12))","speler27331.kaarten.add(Kaart(RUITEN, 7))","speler35113.clear()","speler35113.kaarten.add(Kaart(RUITEN, 9))","speler35113.kaarten.add(Kaart(RUITEN, 13))","speler35113.kaarten.add(Kaart(RUITEN, 8))","speler35113.kaarten.add(Kaart(SCHOPPEN, 7))","assertThat(SpelerService.pakSlag(speler35113)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(SCHOPPEN,12))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.toep(speler35113)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.gaMeeMetToep(speler27331)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(SCHOPPEN,7))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler27331)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(SCHOPPEN,14))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(RUITEN,13))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler27331)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(RUITEN,12))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(RUITEN,8))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler27331)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(RUITEN,7))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(RUITEN,9))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","speler27331.clear()","speler27331.kaarten.add(Kaart(RUITEN, 10))","speler27331.kaarten.add(Kaart(RUITEN, 14))","speler27331.kaarten.add(Kaart(SCHOPPEN, 12))","speler27331.kaarten.add(Kaart(KLAVER, 12))","speler35113.clear()","speler35113.kaarten.add(Kaart(HARTEN, 14))","speler35113.kaarten.add(Kaart(SCHOPPEN, 10))","speler35113.kaarten.add(Kaart(KLAVER, 11))","speler35113.kaarten.add(Kaart(HARTEN, 8))","assertThat(SpelerService.pakSlag(speler35113)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(SCHOPPEN,12))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(SCHOPPEN,10))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler27331)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(RUITEN,14))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(HARTEN,14))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler27331)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(RUITEN,10))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(KLAVER,11))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler27331)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(KLAVER,12))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(HARTEN,8))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","speler27331.clear()","speler27331.kaarten.add(Kaart(RUITEN, 12))","speler27331.kaarten.add(Kaart(SCHOPPEN, 13))","speler27331.kaarten.add(Kaart(SCHOPPEN, 7))","speler27331.kaarten.add(Kaart(SCHOPPEN, 9))","speler35113.clear()","speler35113.kaarten.add(Kaart(KLAVER, 12))","speler35113.kaarten.add(Kaart(RUITEN, 14))","speler35113.kaarten.add(Kaart(HARTEN, 8))","speler35113.kaarten.add(Kaart(HARTEN, 10))","assertThat(SpelerService.pakSlag(speler27331)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(HARTEN,8))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(SCHOPPEN,13))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler35113)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(KLAVER,12))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(SCHOPPEN,9))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler35113)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(HARTEN,10))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(SCHOPPEN,7))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler35113)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(RUITEN,14))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(RUITEN,12))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","speler27331.clear()","speler27331.kaarten.add(Kaart(KLAVER, 13))","speler27331.kaarten.add(Kaart(HARTEN, 7))","speler27331.kaarten.add(Kaart(SCHOPPEN, 14))","speler27331.kaarten.add(Kaart(RUITEN, 9))","speler35113.clear()","speler35113.kaarten.add(Kaart(SCHOPPEN, 12))","speler35113.kaarten.add(Kaart(KLAVER, 7))","speler35113.kaarten.add(Kaart(HARTEN, 10))","speler35113.kaarten.add(Kaart(SCHOPPEN, 8))","assertThat(SpelerService.pakSlag(speler35113)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(SCHOPPEN,14))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(SCHOPPEN,12))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler27331)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(RUITEN,9))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(KLAVER,7))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler27331)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(KLAVER,13))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(SCHOPPEN,8))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler27331)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(HARTEN,7))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(HARTEN,10))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","speler27331.clear()","speler27331.kaarten.add(Kaart(RUITEN, 7))","speler27331.kaarten.add(Kaart(KLAVER, 14))","speler27331.kaarten.add(Kaart(KLAVER, 11))","speler27331.kaarten.add(Kaart(HARTEN, 11))","speler35113.clear()","speler35113.kaarten.add(Kaart(KLAVER, 7))","speler35113.kaarten.add(Kaart(SCHOPPEN, 9))","speler35113.kaarten.add(Kaart(SCHOPPEN, 10))","speler35113.kaarten.add(Kaart(HARTEN, 12))","assertThat(SpelerService.pakSlag(speler35113)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(KLAVER,11))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(KLAVER,7))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler27331)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(KLAVER,14))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(SCHOPPEN,9))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler27331)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(RUITEN,7))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(SCHOPPEN,10))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler27331)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(HARTEN,11))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(HARTEN,12))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","speler27331.clear()","speler27331.kaarten.add(Kaart(SCHOPPEN, 14))","speler27331.kaarten.add(Kaart(SCHOPPEN, 10))","speler27331.kaarten.add(Kaart(KLAVER, 10))","speler27331.kaarten.add(Kaart(SCHOPPEN, 13))","speler35113.clear()","speler35113.kaarten.add(Kaart(SCHOPPEN, 7))","speler35113.kaarten.add(Kaart(KLAVER, 14))","speler35113.kaarten.add(Kaart(HARTEN, 7))","speler35113.kaarten.add(Kaart(HARTEN, 9))","assertThat(SpelerService.pakSlag(speler35113)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(SCHOPPEN,13))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(SCHOPPEN,7))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler27331)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(SCHOPPEN,14))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(KLAVER,14))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler27331)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(KLAVER,10))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(HARTEN,9))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler27331)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(SCHOPPEN,10))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(HARTEN,7))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","speler27331.clear()","speler27331.kaarten.add(Kaart(RUITEN, 10))","speler27331.kaarten.add(Kaart(RUITEN, 13))","speler27331.kaarten.add(Kaart(SCHOPPEN, 14))","speler27331.kaarten.add(Kaart(SCHOPPEN, 8))","speler35113.clear()","speler35113.kaarten.add(Kaart(RUITEN, 14))","speler35113.kaarten.add(Kaart(SCHOPPEN, 7))","speler35113.kaarten.add(Kaart(KLAVER, 9))","speler35113.kaarten.add(Kaart(HARTEN, 11))","assertThat(SpelerService.pakSlag(speler27331)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(HARTEN,11))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(RUITEN,10))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler35113)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(SCHOPPEN,7))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(SCHOPPEN,14))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler27331)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(RUITEN,13))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(RUITEN,14))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler35113)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(KLAVER,9))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(SCHOPPEN,8))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","speler27331.clear()","speler27331.kaarten.add(Kaart(SCHOPPEN, 12))","speler27331.kaarten.add(Kaart(SCHOPPEN, 9))","speler27331.kaarten.add(Kaart(KLAVER, 12))","speler27331.kaarten.add(Kaart(SCHOPPEN, 8))","speler35113.clear()","speler35113.kaarten.add(Kaart(KLAVER, 9))","speler35113.kaarten.add(Kaart(KLAVER, 11))","speler35113.kaarten.add(Kaart(SCHOPPEN, 7))","speler35113.kaarten.add(Kaart(RUITEN, 14))","assertThat(SpelerService.pakSlag(speler35113)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(SCHOPPEN,9))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(SCHOPPEN,7))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler27331)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(SCHOPPEN,8))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(KLAVER,9))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler27331)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(KLAVER,12))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(KLAVER,11))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler27331)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(SCHOPPEN,12))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(RUITEN,14))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","speler27331.clear()","speler27331.kaarten.add(Kaart(RUITEN, 11))","speler27331.kaarten.add(Kaart(RUITEN, 9))","speler27331.kaarten.add(Kaart(RUITEN, 13))","speler27331.kaarten.add(Kaart(KLAVER, 7))","speler35113.clear()","speler35113.kaarten.add(Kaart(HARTEN, 10))","speler35113.kaarten.add(Kaart(SCHOPPEN, 12))","speler35113.kaarten.add(Kaart(KLAVER, 8))","speler35113.kaarten.add(Kaart(KLAVER, 11))","assertThat(SpelerService.pakSlag(speler27331)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler35113, Kaart(HARTEN,10))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.speelKaart(speler27331, Kaart(KLAVER,7))).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))","assertThat(SpelerService.pakSlag(speler35113)).isEqualTo(CommandResult(CommandStatus.SUCCEDED, \"\"))"],"spelers":[{"id":"27331","naam":"Robbert","kaarten":[{"symbool":"RUITEN","waarde":11},{"symbool":"RUITEN","waarde":9},{"symbool":"RUITEN","waarde":13}],"gespeeldeKaart":null,"totaalLucifers":2,"ingezetteLucifers":1,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":true,"isMonkey":true,"score":99,"scoreDezeRonde":0},{"id":"35113","naam":"Bob","kaarten":[{"symbool":"SCHOPPEN","waarde":12},{"symbool":"KLAVER","waarde":8},{"symbool":"KLAVER","waarde":11}],"gespeeldeKaart":null,"totaalLucifers":5,"ingezetteLucifers":1,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":true,"isMonkey":true,"score":129,"scoreDezeRonde":0}],"spelersDieAfZijn":[],"opkomer":{"id":"35113","naam":"Bob","kaarten":[{"symbool":"SCHOPPEN","waarde":12},{"symbool":"KLAVER","waarde":8},{"symbool":"KLAVER","waarde":11}],"gespeeldeKaart":null,"totaalLucifers":5,"ingezetteLucifers":1,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":true,"isMonkey":true,"score":129,"scoreDezeRonde":0},"huidigeSpeler":{"id":"35113","naam":"Bob","kaarten":[{"symbool":"SCHOPPEN","waarde":12},{"symbool":"KLAVER","waarde":8},{"symbool":"KLAVER","waarde":11}],"gespeeldeKaart":null,"totaalLucifers":5,"ingezetteLucifers":1,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":true,"isMonkey":true,"score":129,"scoreDezeRonde":0},"toeper":null,"inzet":1,"slagWinnaar":null,"tafelWinnaar":null,"gepauzeerd":false}],"uitslagen":[{"timestamp":"Fri May 08 21:26:11 CEST 2020","tafel":2,"logregels":[{"naam":"Berg","score":-1},{"naam":"Joost","score":2},{"naam":"Ferry","score":0},{"naam":"Marco","score":3},{"naam":"Martin","score":5},{"naam":"Bob","score":1}]},{"timestamp":"Fri May 08 21:37:14 CEST 2020","tafel":1,"logregels":[{"naam":"Robbert","score":5},{"naam":"JGwoud","score":3},{"naam":"Bol","score":0},{"naam":"Schaap","score":0},{"naam":"Goof","score":1},{"naam":"JeroenA","score":2}]},{"timestamp":"Fri May 08 22:07:59 CEST 2020","tafel":2,"logregels":[{"naam":"Marco","score":0},{"naam":"Bol","score":2},{"naam":"Bob","score":5},{"naam":"JGwoud","score":1},{"naam":"JeroenA","score":3},{"naam":"Berg","score":0}]},{"timestamp":"Fri May 08 22:09:03 CEST 2020","tafel":1,"logregels":[{"naam":"Schaap","score":3},{"naam":"Ferry","score":3},{"naam":"Martin","score":5},{"naam":"Goof","score":3},{"naam":"Joost","score":-1},{"naam":"Robbert","score":0}]},{"timestamp":"Fri May 08 22:36:28 CEST 2020","tafel":2,"logregels":[{"naam":"Berg","score":-1},{"naam":"Schaap","score":2},{"naam":"Robbert","score":3},{"naam":"JGwoud","score":1},{"naam":"Joost","score":5},{"naam":"Bol","score":0}]},{"timestamp":"Fri May 08 22:42:34 CEST 2020","tafel":1,"logregels":[{"naam":"Bob","score":3},{"naam":"Goof","score":5},{"naam":"Martin","score":1},{"naam":"JeroenA","score":2},{"naam":"Ferry","score":1},{"naam":"Marco","score":1}]},{"timestamp":"Fri May 08 23:07:32 CEST 2020","tafel":1,"logregels":[{"naam":"Ferry","score":5},{"naam":"Bol","score":3},{"naam":"Goof","score":3},{"naam":"Bob","score":0},{"naam":"Martin","score":-1},{"naam":"Joost","score":3}]},{"timestamp":"Fri May 08 23:11:58 CEST 2020","tafel":2,"logregels":[{"naam":"Berg","score":-1},{"naam":"JeroenA","score":1},{"naam":"JGwoud","score":5},{"naam":"Marco","score":3},{"naam":"Robbert","score":1},{"naam":"Schaap","score":2}]},{"timestamp":"Fri May 08 23:34:48 CEST 2020","tafel":2,"logregels":[{"naam":"Bob","score":2},{"naam":"Martin","score":0},{"naam":"JeroenA","score":2},{"naam":"Bol","score":5},{"naam":"Schaap","score":0},{"naam":"Berg","score":3}]},{"timestamp":"Fri May 08 23:39:50 CEST 2020","tafel":1,"logregels":[{"naam":"JGwoud","score":0},{"naam":"Marco","score":3},{"naam":"Robbert","score":5},{"naam":"Joost","score":1},{"naam":"Ferry","score":0},{"naam":"Goof","score":3}]},{"timestamp":"Sat May 09 00:00:57 CEST 2020","tafel":2,"logregels":[{"naam":"JeroenA","score":3},{"naam":"Schaap","score":2},{"naam":"Martin","score":5},{"naam":"Berg","score":2},{"naam":"Marco","score":0}]},{"timestamp":"Sat May 09 00:19:59 CEST 2020","tafel":1,"logregels":[{"naam":"Bol","score":1},{"naam":"Joost","score":1},{"naam":"JGwoud","score":3},{"naam":"Goof","score":-1},{"naam":"Bob","score":2},{"naam":"Robbert","score":5}]},{"timestamp":"Sat May 09 00:55:58 CEST 2020","tafel":1,"logregels":[{"naam":"Marco","score":-3},{"naam":"Schaap","score":3},{"naam":"Bob","score":0},{"naam":"Goof","score":5},{"naam":"JGwoud","score":3},{"naam":"Bol","score":0},{"naam":"Joost","score":1},{"naam":"Robbert","score":0}]},{"timestamp":"Sat May 09 01:14:28 CEST 2020","tafel":1,"logregels":[{"naam":"Joost","score":10},{"naam":"Goof","score":6},{"naam":"Robbert","score":4},{"naam":"JGwoud","score":2},{"naam":"Bob","score":0}]},{"timestamp":"Sat May 09 01:31:37 CEST 2020","tafel":1,"logregels":[{"naam":"Bob","score":50},{"naam":"Robbert","score":30}]},{"timestamp":"Sat May 09 01:41:00 CEST 2020","tafel":1,"logregels":[{"naam":"Bob","score":50},{"naam":"Robbert","score":30}]},{"timestamp":"Sun May 10 16:37:42 CEST 2020","tafel":1,"logregels":[{"naam":"Bob","score":5},{"naam":"Robbert","score":3}]},{"timestamp":"Sun May 10 16:46:23 CEST 2020","tafel":1,"logregels":[{"naam":"Robbert","score":5},{"naam":"Bob","score":3}]},{"timestamp":"Sun May 10 16:51:40 CEST 2020","tafel":1,"logregels":[{"naam":"Bob","score":5},{"naam":"Robbert","score":3}]},{"timestamp":"Sun May 10 19:33:17 CEST 2020","tafel":1,"logregels":[{"naam":"Robbert","score":5},{"naam":"Bob","score":3}]}],"automatischNieuweTafels":true,"nieuweTafelAutoPause":false,"aantalAutomatischeNieuweTafels":1,"aantalFishesNieuweTafels":10,"monkeyDelayMsec":10,"scorelijst":[{"id":"35113","naam":"Bob","kaarten":[{"symbool":"SCHOPPEN","waarde":12},{"symbool":"KLAVER","waarde":8},{"symbool":"KLAVER","waarde":11}],"gespeeldeKaart":null,"totaalLucifers":5,"ingezetteLucifers":1,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":true,"isMonkey":true,"score":129,"scoreDezeRonde":0},{"id":"27331","naam":"Robbert","kaarten":[{"symbool":"RUITEN","waarde":11},{"symbool":"RUITEN","waarde":9},{"symbool":"RUITEN","waarde":13}],"gespeeldeKaart":null,"totaalLucifers":2,"ingezetteLucifers":1,"gepast":false,"toepKeuze":"GEEN_KEUZE","actiefInSpel":true,"wilMeedoen":true,"isMonkey":true,"score":99,"scoreDezeRonde":0}]}